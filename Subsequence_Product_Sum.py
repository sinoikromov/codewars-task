"""
Дан массив целых чисел и целое число m, вернуть сумму произведения
 его подпоследовательностей длины m.

Пример 1:

a = [1, 2, 3]
m = 2
подпоследовательности (длины 2) равны (1,2) (1,3) (2,3), вы должны умножить
 числа каждой подпоследовательности и взять их сумму

product_sum = (1*2) + (1*3) + (2*3) #=> 11
Пример 2:

a = [2,3,4,5]
m = 3
подпоследовательности (длины 3) равны(2,3,4) (2,4,5) (2,3,5) (3,4,5)

product_sum = (2*3*4) + (2*3*5) + (2*4*5) + (3*4*5) #=> 154
Задача:
Напишите функцию product_sum(a, m)`, которая делает то, что описано выше.

Сумма может быть очень большой, поэтому возвращайте результат по модулю 10 9 +7 .
"""

import itertools
import math

from itertools import combinations
from math import prod


# Naive solution, times out
def product_sum_2(a, m):
    c = list(combinations(a, m))
    return [prod(i) for i in c]

# метод динамическый програмирование
def product_sum(xs, m):
    ss = [1] + [0] * m
    for x in xs:
        for i in range(m, 0, -1):
            ss[i] += ss[i - 1] * x
    return ss[m] % (10 ** 9 + 7)


if __name__ == '__main__':
    print(product_sum([5, 7, 2, 3], 2))
